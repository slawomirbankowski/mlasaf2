/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class AlgorithmTypeVersionDto ( 
     val algorithmTypeVersionId : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val guid : Long
     , val algorithmTypeId : Long
     , val algorithmTypeVersionName : String 
     ) extends BaseDto {  
   def tableName : String = {    "algorithmTypeVersion";    }  
   def fields : String = {    "algorithmTypeVersionId,insertedRowDate,lastUpdatedDate,guid,algorithmTypeId,algorithmTypeVersionName";    }  
   def pkFields : String = {    "algorithmTypeVersionId";    }  
   def fkFields : String = {    "algorithmTypeId";    }  
   def nameField : String = {    "algorithmTypeVersionName";    }  
 def getPk() : Long = {    algorithmTypeVersionId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(algorithmTypeVersionId,insertedRowDate,lastUpdatedDate,guid,algorithmTypeId,algorithmTypeVersionName)  }  
 def toStringArray() : Array[String] = {    Array(""+algorithmTypeVersionId,""+insertedRowDate,""+lastUpdatedDate,""+guid,""+algorithmTypeId,""+algorithmTypeVersionName)   }  
 def toJson() : String = {   "{" + "\"algorithmTypeVersionId\":\""+algorithmTypeVersionId+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"guid\":\""+guid+"\""+","+"\"algorithmTypeId\":\""+algorithmTypeId+"\""+","+"\"algorithmTypeVersionName\":\""+algorithmTypeVersionName+"\"" + "}"   }  
 def toFullString() : String = {    "algorithmTypeVersionId:'"+algorithmTypeVersionId+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"guid:'"+guid+"'"+","+"algorithmTypeId:'"+algorithmTypeId+"'"+","+"algorithmTypeVersionName:'"+algorithmTypeVersionName+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "algorithmTypeVersionId" => algorithmTypeVersionId  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "guid" => guid  
     case "algorithmTypeId" => algorithmTypeId  
     case "algorithmTypeVersionName" => algorithmTypeVersionName   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "algorithmTypeVersionId" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "guid" => "Long"  
     case "algorithmTypeId" => "Long"  
     case "algorithmTypeVersionName" => "String"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into algorithmTypeVersion(guid,algorithmTypeId,algorithmTypeVersionName) values (?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, algorithmTypeId);
    stat.setObject(3, algorithmTypeVersionName);
    return stat; 
   } 
   def modify(algorithmTypeId : Long, algorithmTypeVersionName : String) : AlgorithmTypeVersionDto = {
    val dtoModified = new AlgorithmTypeVersionDto(this.algorithmTypeVersionId,this.insertedRowDate,new java.util.Date(),this.guid,algorithmTypeId,algorithmTypeVersionName);
    dtoModified
  }
 } 
object AlgorithmTypeVersionDto { 
  val TABLE_NAME = "algorithmTypeVersion"; 
   val FIELD_algorithmTypeVersionId = "algorithmTypeVersionId";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_guid = "guid";
   val FIELD_algorithmTypeId = "algorithmTypeId";
   val FIELD_algorithmTypeVersionName = "algorithmTypeVersionName";

  def createNewAlgorithmTypeVersionDto(algorithmTypeId : Long, algorithmTypeVersionName : String) : AlgorithmTypeVersionDto = {  
     val dto = new AlgorithmTypeVersionDto(0,new java.util.Date(),new java.util.Date(),0,algorithmTypeId,algorithmTypeVersionName)   
    dto 
  } 

}

 
