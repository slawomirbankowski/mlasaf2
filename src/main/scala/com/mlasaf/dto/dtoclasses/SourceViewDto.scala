/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class SourceViewDto ( 
     val sourceViewId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val sourceInstanceId : Long
     , val sourceViewTypeId : Long
     , val sourceViewFormatId : Long
     , val sourceViewName : String
     , val sourceViewDefinition : String
     , val isExisting : Int
     , val isCustom : Int 
     ) extends BaseDto {  
   def tableName : String = {    "sourceView";    }  
   def fields : String = {    "sourceViewId,guid,insertedRowDate,lastUpdatedDate,sourceInstanceId,sourceViewTypeId,sourceViewFormatId,sourceViewName,sourceViewDefinition,isExisting,isCustom";    }  
   def pkFields : String = {    "sourceViewId";    }  
   def fkFields : String = {    "sourceInstanceId,sourceViewFormatId,sourceViewTypeId";    }  
   def nameField : String = {    "sourceViewName";    }  
 def getPk() : Long = {    sourceViewId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(sourceViewId,guid,insertedRowDate,lastUpdatedDate,sourceInstanceId,sourceViewTypeId,sourceViewFormatId,sourceViewName,sourceViewDefinition,isExisting,isCustom)  }  
 def toStringArray() : Array[String] = {    Array(""+sourceViewId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+sourceInstanceId,""+sourceViewTypeId,""+sourceViewFormatId,""+sourceViewName,""+sourceViewDefinition,""+isExisting,""+isCustom)   }  
 def toJson() : String = {   "{" + "\"sourceViewId\":\""+sourceViewId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"sourceInstanceId\":\""+sourceInstanceId+"\""+","+"\"sourceViewTypeId\":\""+sourceViewTypeId+"\""+","+"\"sourceViewFormatId\":\""+sourceViewFormatId+"\""+","+"\"sourceViewName\":\""+sourceViewName+"\""+","+"\"sourceViewDefinition\":\""+sourceViewDefinition+"\""+","+"\"isExisting\":\""+isExisting+"\""+","+"\"isCustom\":\""+isCustom+"\"" + "}"   }  
 def toFullString() : String = {    "sourceViewId:'"+sourceViewId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"sourceInstanceId:'"+sourceInstanceId+"'"+","+"sourceViewTypeId:'"+sourceViewTypeId+"'"+","+"sourceViewFormatId:'"+sourceViewFormatId+"'"+","+"sourceViewName:'"+sourceViewName+"'"+","+"sourceViewDefinition:'"+sourceViewDefinition+"'"+","+"isExisting:'"+isExisting+"'"+","+"isCustom:'"+isCustom+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "sourceViewId" => sourceViewId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "sourceInstanceId" => sourceInstanceId  
     case "sourceViewTypeId" => sourceViewTypeId  
     case "sourceViewFormatId" => sourceViewFormatId  
     case "sourceViewName" => sourceViewName  
     case "sourceViewDefinition" => sourceViewDefinition  
     case "isExisting" => isExisting  
     case "isCustom" => isCustom   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "sourceViewId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "sourceInstanceId" => "Long"  
     case "sourceViewTypeId" => "Long"  
     case "sourceViewFormatId" => "Long"  
     case "sourceViewName" => "String"  
     case "sourceViewDefinition" => "String"  
     case "isExisting" => "Int"  
     case "isCustom" => "Int"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into sourceView(guid,sourceInstanceId,sourceViewTypeId,sourceViewFormatId,sourceViewName,sourceViewDefinition,isExisting,isCustom) values (?,?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, sourceInstanceId);
    stat.setObject(3, sourceViewTypeId);
    stat.setObject(4, sourceViewFormatId);
    stat.setObject(5, sourceViewName);
    stat.setObject(6, sourceViewDefinition);
    stat.setObject(7, isExisting);
    stat.setObject(8, isCustom);
    return stat; 
   } 
   def modify(sourceInstanceId : Long, sourceViewTypeId : Long, sourceViewFormatId : Long, sourceViewName : String, sourceViewDefinition : String, isExisting : Int, isCustom : Int) : SourceViewDto = {
    val dtoModified = new SourceViewDto(this.sourceViewId,this.guid,this.insertedRowDate,new java.util.Date(),sourceInstanceId,sourceViewTypeId,sourceViewFormatId,sourceViewName,sourceViewDefinition,isExisting,isCustom);
    dtoModified
  }
 } 
object SourceViewDto { 
  val TABLE_NAME = "sourceView"; 
   val FIELD_sourceViewId = "sourceViewId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_sourceInstanceId = "sourceInstanceId";
   val FIELD_sourceViewTypeId = "sourceViewTypeId";
   val FIELD_sourceViewFormatId = "sourceViewFormatId";
   val FIELD_sourceViewName = "sourceViewName";
   val FIELD_sourceViewDefinition = "sourceViewDefinition";
   val FIELD_isExisting = "isExisting";
   val FIELD_isCustom = "isCustom";

  def createNewSourceViewDto(sourceInstanceId : Long, sourceViewTypeId : Long, sourceViewFormatId : Long, sourceViewName : String, sourceViewDefinition : String, isExisting : Int, isCustom : Int) : SourceViewDto = {  
     val dto = new SourceViewDto(0,0,new java.util.Date(),new java.util.Date(),sourceInstanceId,sourceViewTypeId,sourceViewFormatId,sourceViewName,sourceViewDefinition,isExisting,isCustom)   
    dto 
  } 

}

 
