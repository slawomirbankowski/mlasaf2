/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class AlgorithmScheduleDto ( 
     val algorithmScheduleId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val algorithmImplementationId : Long
     , val algorithmScheduleTypeId : Long
     , val algorithmScheduleName : String
     , val isScheduled : Int
     , val intervalValue : Long
     , val isRunning : Int 
     ) extends BaseDto {  
   def tableName : String = {    "algorithmSchedule";    }  
   def fields : String = {    "algorithmScheduleId,guid,insertedRowDate,lastUpdatedDate,algorithmImplementationId,algorithmScheduleTypeId,algorithmScheduleName,isScheduled,intervalValue,isRunning";    }  
   def pkFields : String = {    "algorithmScheduleId";    }  
   def fkFields : String = {    "algorithmImplementationId,algorithmScheduleTypeId";    }  
   def nameField : String = {    "algorithmScheduleName";    }  
 def getPk() : Long = {    algorithmScheduleId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(algorithmScheduleId,guid,insertedRowDate,lastUpdatedDate,algorithmImplementationId,algorithmScheduleTypeId,algorithmScheduleName,isScheduled,intervalValue,isRunning)  }  
 def toStringArray() : Array[String] = {    Array(""+algorithmScheduleId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+algorithmImplementationId,""+algorithmScheduleTypeId,""+algorithmScheduleName,""+isScheduled,""+intervalValue,""+isRunning)   }  
 def toJson() : String = {   "{" + "\"algorithmScheduleId\":\""+algorithmScheduleId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"algorithmImplementationId\":\""+algorithmImplementationId+"\""+","+"\"algorithmScheduleTypeId\":\""+algorithmScheduleTypeId+"\""+","+"\"algorithmScheduleName\":\""+algorithmScheduleName+"\""+","+"\"isScheduled\":\""+isScheduled+"\""+","+"\"intervalValue\":\""+intervalValue+"\""+","+"\"isRunning\":\""+isRunning+"\"" + "}"   }  
 def toFullString() : String = {    "algorithmScheduleId:'"+algorithmScheduleId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"algorithmImplementationId:'"+algorithmImplementationId+"'"+","+"algorithmScheduleTypeId:'"+algorithmScheduleTypeId+"'"+","+"algorithmScheduleName:'"+algorithmScheduleName+"'"+","+"isScheduled:'"+isScheduled+"'"+","+"intervalValue:'"+intervalValue+"'"+","+"isRunning:'"+isRunning+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "algorithmScheduleId" => algorithmScheduleId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "algorithmImplementationId" => algorithmImplementationId  
     case "algorithmScheduleTypeId" => algorithmScheduleTypeId  
     case "algorithmScheduleName" => algorithmScheduleName  
     case "isScheduled" => isScheduled  
     case "intervalValue" => intervalValue  
     case "isRunning" => isRunning   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "algorithmScheduleId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "algorithmImplementationId" => "Long"  
     case "algorithmScheduleTypeId" => "Long"  
     case "algorithmScheduleName" => "String"  
     case "isScheduled" => "Int"  
     case "intervalValue" => "Long"  
     case "isRunning" => "Int"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into algorithmSchedule(guid,algorithmImplementationId,algorithmScheduleTypeId,algorithmScheduleName,isScheduled,intervalValue,isRunning) values (?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, algorithmImplementationId);
    stat.setObject(3, algorithmScheduleTypeId);
    stat.setObject(4, algorithmScheduleName);
    stat.setObject(5, isScheduled);
    stat.setObject(6, intervalValue);
    stat.setObject(7, isRunning);
    return stat; 
   } 
   def modify(algorithmImplementationId : Long, algorithmScheduleTypeId : Long, algorithmScheduleName : String, isScheduled : Int, intervalValue : Long, isRunning : Int) : AlgorithmScheduleDto = {
    val dtoModified = new AlgorithmScheduleDto(this.algorithmScheduleId,this.guid,this.insertedRowDate,new java.util.Date(),algorithmImplementationId,algorithmScheduleTypeId,algorithmScheduleName,isScheduled,intervalValue,isRunning);
    dtoModified
  }
 } 
object AlgorithmScheduleDto { 
  val TABLE_NAME = "algorithmSchedule"; 
   val FIELD_algorithmScheduleId = "algorithmScheduleId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_algorithmImplementationId = "algorithmImplementationId";
   val FIELD_algorithmScheduleTypeId = "algorithmScheduleTypeId";
   val FIELD_algorithmScheduleName = "algorithmScheduleName";
   val FIELD_isScheduled = "isScheduled";
   val FIELD_intervalValue = "intervalValue";
   val FIELD_isRunning = "isRunning";

  def createNewAlgorithmScheduleDto(algorithmImplementationId : Long, algorithmScheduleTypeId : Long, algorithmScheduleName : String, isScheduled : Int, intervalValue : Long, isRunning : Int) : AlgorithmScheduleDto = {  
     val dto = new AlgorithmScheduleDto(0,0,new java.util.Date(),new java.util.Date(),algorithmImplementationId,algorithmScheduleTypeId,algorithmScheduleName,isScheduled,intervalValue,isRunning)   
    dto 
  } 

}

 
