/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class AlgorithmRunDto ( 
     val algorithmRunId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val algorithmScheduleId : Long
     , val executorInstanceId : Long
     , val executorStorageId : Long
     , val algorithmRunTypeId : Long
     , val algorithmRunName : String
     , val runDate : java.util.Date
     , val runStatus : String
     , val isError : Int
     , val errorDescription : String
     , val isRunning : Int
     , val isFinished : Int 
     ) extends BaseDto {  
   def tableName : String = {    "algorithmRun";    }  
   def fields : String = {    "algorithmRunId,guid,insertedRowDate,lastUpdatedDate,algorithmScheduleId,executorInstanceId,executorStorageId,algorithmRunTypeId,algorithmRunName,runDate,runStatus,isError,errorDescription,isRunning,isFinished";    }  
   def pkFields : String = {    "algorithmRunId";    }  
   def fkFields : String = {    "algorithmRunTypeId,algorithmScheduleId,executorInstanceId,executorStorageId";    }  
   def nameField : String = {    "algorithmRunName";    }  
 def getPk() : Long = {    algorithmRunId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(algorithmRunId,guid,insertedRowDate,lastUpdatedDate,algorithmScheduleId,executorInstanceId,executorStorageId,algorithmRunTypeId,algorithmRunName,runDate,runStatus,isError,errorDescription,isRunning,isFinished)  }  
 def toStringArray() : Array[String] = {    Array(""+algorithmRunId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+algorithmScheduleId,""+executorInstanceId,""+executorStorageId,""+algorithmRunTypeId,""+algorithmRunName,""+runDate,""+runStatus,""+isError,""+errorDescription,""+isRunning,""+isFinished)   }  
 def toJson() : String = {   "{" + "\"algorithmRunId\":\""+algorithmRunId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"algorithmScheduleId\":\""+algorithmScheduleId+"\""+","+"\"executorInstanceId\":\""+executorInstanceId+"\""+","+"\"executorStorageId\":\""+executorStorageId+"\""+","+"\"algorithmRunTypeId\":\""+algorithmRunTypeId+"\""+","+"\"algorithmRunName\":\""+algorithmRunName+"\""+","+"\"runDate\":\""+runDate+"\""+","+"\"runStatus\":\""+runStatus+"\""+","+"\"isError\":\""+isError+"\""+","+"\"errorDescription\":\""+errorDescription+"\""+","+"\"isRunning\":\""+isRunning+"\""+","+"\"isFinished\":\""+isFinished+"\"" + "}"   }  
 def toFullString() : String = {    "algorithmRunId:'"+algorithmRunId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"algorithmScheduleId:'"+algorithmScheduleId+"'"+","+"executorInstanceId:'"+executorInstanceId+"'"+","+"executorStorageId:'"+executorStorageId+"'"+","+"algorithmRunTypeId:'"+algorithmRunTypeId+"'"+","+"algorithmRunName:'"+algorithmRunName+"'"+","+"runDate:'"+runDate+"'"+","+"runStatus:'"+runStatus+"'"+","+"isError:'"+isError+"'"+","+"errorDescription:'"+errorDescription+"'"+","+"isRunning:'"+isRunning+"'"+","+"isFinished:'"+isFinished+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "algorithmRunId" => algorithmRunId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "algorithmScheduleId" => algorithmScheduleId  
     case "executorInstanceId" => executorInstanceId  
     case "executorStorageId" => executorStorageId  
     case "algorithmRunTypeId" => algorithmRunTypeId  
     case "algorithmRunName" => algorithmRunName  
     case "runDate" => runDate  
     case "runStatus" => runStatus  
     case "isError" => isError  
     case "errorDescription" => errorDescription  
     case "isRunning" => isRunning  
     case "isFinished" => isFinished   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "algorithmRunId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "algorithmScheduleId" => "Long"  
     case "executorInstanceId" => "Long"  
     case "executorStorageId" => "Long"  
     case "algorithmRunTypeId" => "Long"  
     case "algorithmRunName" => "String"  
     case "runDate" => "java.util.Date"  
     case "runStatus" => "String"  
     case "isError" => "Int"  
     case "errorDescription" => "String"  
     case "isRunning" => "Int"  
     case "isFinished" => "Int"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into algorithmRun(guid,algorithmScheduleId,executorInstanceId,executorStorageId,algorithmRunTypeId,algorithmRunName,runDate,runStatus,isError,errorDescription,isRunning,isFinished) values (?,?,?,?,?,?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, algorithmScheduleId);
    stat.setObject(3, executorInstanceId);
    stat.setObject(4, executorStorageId);
    stat.setObject(5, algorithmRunTypeId);
    stat.setObject(6, algorithmRunName);
    stat.setObject(7, runDate);
    stat.setObject(8, runStatus);
    stat.setObject(9, isError);
    stat.setObject(10, errorDescription);
    stat.setObject(11, isRunning);
    stat.setObject(12, isFinished);
    return stat; 
   } 
   def modify(algorithmScheduleId : Long, executorInstanceId : Long, executorStorageId : Long, algorithmRunTypeId : Long, algorithmRunName : String, runDate : java.util.Date, runStatus : String, isError : Int, errorDescription : String, isRunning : Int, isFinished : Int) : AlgorithmRunDto = {
    val dtoModified = new AlgorithmRunDto(this.algorithmRunId,this.guid,this.insertedRowDate,new java.util.Date(),algorithmScheduleId,executorInstanceId,executorStorageId,algorithmRunTypeId,algorithmRunName,runDate,runStatus,isError,errorDescription,isRunning,isFinished);
    dtoModified
  }
 } 
object AlgorithmRunDto { 
  val TABLE_NAME = "algorithmRun"; 
   val FIELD_algorithmRunId = "algorithmRunId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_algorithmScheduleId = "algorithmScheduleId";
   val FIELD_executorInstanceId = "executorInstanceId";
   val FIELD_executorStorageId = "executorStorageId";
   val FIELD_algorithmRunTypeId = "algorithmRunTypeId";
   val FIELD_algorithmRunName = "algorithmRunName";
   val FIELD_runDate = "runDate";
   val FIELD_runStatus = "runStatus";
   val FIELD_isError = "isError";
   val FIELD_errorDescription = "errorDescription";
   val FIELD_isRunning = "isRunning";
   val FIELD_isFinished = "isFinished";

  def createNewAlgorithmRunDto(algorithmScheduleId : Long, executorInstanceId : Long, executorStorageId : Long, algorithmRunTypeId : Long, algorithmRunName : String, runDate : java.util.Date, runStatus : String, isError : Int, errorDescription : String, isRunning : Int, isFinished : Int) : AlgorithmRunDto = {  
     val dto = new AlgorithmRunDto(0,0,new java.util.Date(),new java.util.Date(),algorithmScheduleId,executorInstanceId,executorStorageId,algorithmRunTypeId,algorithmRunName,runDate,runStatus,isError,errorDescription,isRunning,isFinished)   
    dto 
  } 

}

 
