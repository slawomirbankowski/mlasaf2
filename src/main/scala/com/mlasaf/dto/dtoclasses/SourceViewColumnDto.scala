/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class SourceViewColumnDto ( 
     val sourceViewColumnId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val sourceViewId : Long
     , val columnName : String
     , val columnType : String 
     ) extends BaseDto {  
   def tableName : String = {    "sourceViewColumn";    }  
   def fields : String = {    "sourceViewColumnId,guid,insertedRowDate,lastUpdatedDate,sourceViewId,columnName,columnType";    }  
   def pkFields : String = {    "sourceViewColumnId";    }  
   def fkFields : String = {    "sourceViewId";    }  
   def nameField : String = {    "";    }  
 def getPk() : Long = {    sourceViewColumnId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(sourceViewColumnId,guid,insertedRowDate,lastUpdatedDate,sourceViewId,columnName,columnType)  }  
 def toStringArray() : Array[String] = {    Array(""+sourceViewColumnId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+sourceViewId,""+columnName,""+columnType)   }  
 def toJson() : String = {   "{" + "\"sourceViewColumnId\":\""+sourceViewColumnId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"sourceViewId\":\""+sourceViewId+"\""+","+"\"columnName\":\""+columnName+"\""+","+"\"columnType\":\""+columnType+"\"" + "}"   }  
 def toFullString() : String = {    "sourceViewColumnId:'"+sourceViewColumnId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"sourceViewId:'"+sourceViewId+"'"+","+"columnName:'"+columnName+"'"+","+"columnType:'"+columnType+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "sourceViewColumnId" => sourceViewColumnId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "sourceViewId" => sourceViewId  
     case "columnName" => columnName  
     case "columnType" => columnType   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "sourceViewColumnId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "sourceViewId" => "Long"  
     case "columnName" => "String"  
     case "columnType" => "String"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into sourceViewColumn(guid,sourceViewId,columnName,columnType) values (?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, sourceViewId);
    stat.setObject(3, columnName);
    stat.setObject(4, columnType);
    return stat; 
   } 
   def modify(sourceViewId : Long, columnName : String, columnType : String) : SourceViewColumnDto = {
    val dtoModified = new SourceViewColumnDto(this.sourceViewColumnId,this.guid,this.insertedRowDate,new java.util.Date(),sourceViewId,columnName,columnType);
    dtoModified
  }
 } 
object SourceViewColumnDto { 
  val TABLE_NAME = "sourceViewColumn"; 
   val FIELD_sourceViewColumnId = "sourceViewColumnId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_sourceViewId = "sourceViewId";
   val FIELD_columnName = "columnName";
   val FIELD_columnType = "columnType";

  def createNewSourceViewColumnDto(sourceViewId : Long, columnName : String, columnType : String) : SourceViewColumnDto = {  
     val dto = new SourceViewColumnDto(0,0,new java.util.Date(),new java.util.Date(),sourceViewId,columnName,columnType)   
    dto 
  } 

}

 
