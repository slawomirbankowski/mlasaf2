/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class ExecutorContextThreadDto ( 
     val executorContextThreadId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val executorContextId : Long
     , val threadId : Int
     , val threadName : String
     , val threadPriority : Int
     , val threadStatus : String
     , val isRunning : Int
     , val isInitialized : Int
     , val isWorking : Int
     , val isStopped : Int
     , val isDaemon : Int
     , val runInterval : Int
     , val startTime : java.util.Date
     , val stopTime : java.util.Date
     , val endTime : java.util.Date 
     ) extends BaseDto {  
   def tableName : String = {    "executorContextThread";    }  
   def fields : String = {    "executorContextThreadId,guid,insertedRowDate,lastUpdatedDate,executorContextId,threadId,threadName,threadPriority,threadStatus,isRunning,isInitialized,isWorking,isStopped,isDaemon,runInterval,startTime,stopTime,endTime";    }  
   def pkFields : String = {    "executorContextThreadId";    }  
   def fkFields : String = {    "executorContextId";    }  
   def nameField : String = {    "";    }  
 def getPk() : Long = {    executorContextThreadId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(executorContextThreadId,guid,insertedRowDate,lastUpdatedDate,executorContextId,threadId,threadName,threadPriority,threadStatus,isRunning,isInitialized,isWorking,isStopped,isDaemon,runInterval,startTime,stopTime,endTime)  }  
 def toStringArray() : Array[String] = {    Array(""+executorContextThreadId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+executorContextId,""+threadId,""+threadName,""+threadPriority,""+threadStatus,""+isRunning,""+isInitialized,""+isWorking,""+isStopped,""+isDaemon,""+runInterval,""+startTime,""+stopTime,""+endTime)   }  
 def toJson() : String = {   "{" + "\"executorContextThreadId\":\""+executorContextThreadId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"executorContextId\":\""+executorContextId+"\""+","+"\"threadId\":\""+threadId+"\""+","+"\"threadName\":\""+threadName+"\""+","+"\"threadPriority\":\""+threadPriority+"\""+","+"\"threadStatus\":\""+threadStatus+"\""+","+"\"isRunning\":\""+isRunning+"\""+","+"\"isInitialized\":\""+isInitialized+"\""+","+"\"isWorking\":\""+isWorking+"\""+","+"\"isStopped\":\""+isStopped+"\""+","+"\"isDaemon\":\""+isDaemon+"\""+","+"\"runInterval\":\""+runInterval+"\""+","+"\"startTime\":\""+startTime+"\""+","+"\"stopTime\":\""+stopTime+"\""+","+"\"endTime\":\""+endTime+"\"" + "}"   }  
 def toFullString() : String = {    "executorContextThreadId:'"+executorContextThreadId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"executorContextId:'"+executorContextId+"'"+","+"threadId:'"+threadId+"'"+","+"threadName:'"+threadName+"'"+","+"threadPriority:'"+threadPriority+"'"+","+"threadStatus:'"+threadStatus+"'"+","+"isRunning:'"+isRunning+"'"+","+"isInitialized:'"+isInitialized+"'"+","+"isWorking:'"+isWorking+"'"+","+"isStopped:'"+isStopped+"'"+","+"isDaemon:'"+isDaemon+"'"+","+"runInterval:'"+runInterval+"'"+","+"startTime:'"+startTime+"'"+","+"stopTime:'"+stopTime+"'"+","+"endTime:'"+endTime+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "executorContextThreadId" => executorContextThreadId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "executorContextId" => executorContextId  
     case "threadId" => threadId  
     case "threadName" => threadName  
     case "threadPriority" => threadPriority  
     case "threadStatus" => threadStatus  
     case "isRunning" => isRunning  
     case "isInitialized" => isInitialized  
     case "isWorking" => isWorking  
     case "isStopped" => isStopped  
     case "isDaemon" => isDaemon  
     case "runInterval" => runInterval  
     case "startTime" => startTime  
     case "stopTime" => stopTime  
     case "endTime" => endTime   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "executorContextThreadId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "executorContextId" => "Long"  
     case "threadId" => "Int"  
     case "threadName" => "String"  
     case "threadPriority" => "Int"  
     case "threadStatus" => "String"  
     case "isRunning" => "Int"  
     case "isInitialized" => "Int"  
     case "isWorking" => "Int"  
     case "isStopped" => "Int"  
     case "isDaemon" => "Int"  
     case "runInterval" => "Int"  
     case "startTime" => "java.util.Date"  
     case "stopTime" => "java.util.Date"  
     case "endTime" => "java.util.Date"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into executorContextThread(guid,executorContextId,threadId,threadName,threadPriority,threadStatus,isRunning,isInitialized,isWorking,isStopped,isDaemon,runInterval,startTime,stopTime,endTime) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, executorContextId);
    stat.setObject(3, threadId);
    stat.setObject(4, threadName);
    stat.setObject(5, threadPriority);
    stat.setObject(6, threadStatus);
    stat.setObject(7, isRunning);
    stat.setObject(8, isInitialized);
    stat.setObject(9, isWorking);
    stat.setObject(10, isStopped);
    stat.setObject(11, isDaemon);
    stat.setObject(12, runInterval);
    stat.setObject(13, startTime);
    stat.setObject(14, stopTime);
    stat.setObject(15, endTime);
    return stat; 
   } 
   def modify(executorContextId : Long, threadId : Int, threadName : String, threadPriority : Int, threadStatus : String, isRunning : Int, isInitialized : Int, isWorking : Int, isStopped : Int, isDaemon : Int, runInterval : Int, startTime : java.util.Date, stopTime : java.util.Date, endTime : java.util.Date) : ExecutorContextThreadDto = {
    val dtoModified = new ExecutorContextThreadDto(this.executorContextThreadId,this.guid,this.insertedRowDate,new java.util.Date(),executorContextId,threadId,threadName,threadPriority,threadStatus,isRunning,isInitialized,isWorking,isStopped,isDaemon,runInterval,startTime,stopTime,endTime);
    dtoModified
  }
 } 
object ExecutorContextThreadDto { 
  val TABLE_NAME = "executorContextThread"; 
   val FIELD_executorContextThreadId = "executorContextThreadId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_executorContextId = "executorContextId";
   val FIELD_threadId = "threadId";
   val FIELD_threadName = "threadName";
   val FIELD_threadPriority = "threadPriority";
   val FIELD_threadStatus = "threadStatus";
   val FIELD_isRunning = "isRunning";
   val FIELD_isInitialized = "isInitialized";
   val FIELD_isWorking = "isWorking";
   val FIELD_isStopped = "isStopped";
   val FIELD_isDaemon = "isDaemon";
   val FIELD_runInterval = "runInterval";
   val FIELD_startTime = "startTime";
   val FIELD_stopTime = "stopTime";
   val FIELD_endTime = "endTime";

  def createNewExecutorContextThreadDto(executorContextId : Long, threadId : Int, threadName : String, threadPriority : Int, threadStatus : String, isRunning : Int, isInitialized : Int, isWorking : Int, isStopped : Int, isDaemon : Int, runInterval : Int, startTime : java.util.Date, stopTime : java.util.Date, endTime : java.util.Date) : ExecutorContextThreadDto = {  
     val dto = new ExecutorContextThreadDto(0,0,new java.util.Date(),new java.util.Date(),executorContextId,threadId,threadName,threadPriority,threadStatus,isRunning,isInitialized,isWorking,isStopped,isDaemon,runInterval,startTime,stopTime,endTime)   
    dto 
  } 

}

 
