/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class AlgorithmOutputDto ( 
     val algorithmOutputId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val algorithmRunId : Long
     , val algorithmOutputTypeId : Long
     , val executorStorageId : Long
     , val executorStorageResourceId : Long 
     ) extends BaseDto {  
   def tableName : String = {    "algorithmOutput";    }  
   def fields : String = {    "algorithmOutputId,guid,insertedRowDate,lastUpdatedDate,algorithmRunId,algorithmOutputTypeId,executorStorageId,executorStorageResourceId";    }  
   def pkFields : String = {    "algorithmOutputId";    }  
   def fkFields : String = {    "algorithmOutputTypeId,algorithmRunId,executorStorageId,executorStorageResourceId";    }  
   def nameField : String = {    "";    }  
 def getPk() : Long = {    algorithmOutputId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(algorithmOutputId,guid,insertedRowDate,lastUpdatedDate,algorithmRunId,algorithmOutputTypeId,executorStorageId,executorStorageResourceId)  }  
 def toStringArray() : Array[String] = {    Array(""+algorithmOutputId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+algorithmRunId,""+algorithmOutputTypeId,""+executorStorageId,""+executorStorageResourceId)   }  
 def toJson() : String = {   "{" + "\"algorithmOutputId\":\""+algorithmOutputId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"algorithmRunId\":\""+algorithmRunId+"\""+","+"\"algorithmOutputTypeId\":\""+algorithmOutputTypeId+"\""+","+"\"executorStorageId\":\""+executorStorageId+"\""+","+"\"executorStorageResourceId\":\""+executorStorageResourceId+"\"" + "}"   }  
 def toFullString() : String = {    "algorithmOutputId:'"+algorithmOutputId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"algorithmRunId:'"+algorithmRunId+"'"+","+"algorithmOutputTypeId:'"+algorithmOutputTypeId+"'"+","+"executorStorageId:'"+executorStorageId+"'"+","+"executorStorageResourceId:'"+executorStorageResourceId+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "algorithmOutputId" => algorithmOutputId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "algorithmRunId" => algorithmRunId  
     case "algorithmOutputTypeId" => algorithmOutputTypeId  
     case "executorStorageId" => executorStorageId  
     case "executorStorageResourceId" => executorStorageResourceId   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "algorithmOutputId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "algorithmRunId" => "Long"  
     case "algorithmOutputTypeId" => "Long"  
     case "executorStorageId" => "Long"  
     case "executorStorageResourceId" => "Long"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into algorithmOutput(guid,algorithmRunId,algorithmOutputTypeId,executorStorageId,executorStorageResourceId) values (?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, algorithmRunId);
    stat.setObject(3, algorithmOutputTypeId);
    stat.setObject(4, executorStorageId);
    stat.setObject(5, executorStorageResourceId);
    return stat; 
   } 
   def modify(algorithmRunId : Long, algorithmOutputTypeId : Long, executorStorageId : Long, executorStorageResourceId : Long) : AlgorithmOutputDto = {
    val dtoModified = new AlgorithmOutputDto(this.algorithmOutputId,this.guid,this.insertedRowDate,new java.util.Date(),algorithmRunId,algorithmOutputTypeId,executorStorageId,executorStorageResourceId);
    dtoModified
  }
 } 
object AlgorithmOutputDto { 
  val TABLE_NAME = "algorithmOutput"; 
   val FIELD_algorithmOutputId = "algorithmOutputId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_algorithmRunId = "algorithmRunId";
   val FIELD_algorithmOutputTypeId = "algorithmOutputTypeId";
   val FIELD_executorStorageId = "executorStorageId";
   val FIELD_executorStorageResourceId = "executorStorageResourceId";

  def createNewAlgorithmOutputDto(algorithmRunId : Long, algorithmOutputTypeId : Long, executorStorageId : Long, executorStorageResourceId : Long) : AlgorithmOutputDto = {  
     val dto = new AlgorithmOutputDto(0,0,new java.util.Date(),new java.util.Date(),algorithmRunId,algorithmOutputTypeId,executorStorageId,executorStorageResourceId)   
    dto 
  } 

}

 
