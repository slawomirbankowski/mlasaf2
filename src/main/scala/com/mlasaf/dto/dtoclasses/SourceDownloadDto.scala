/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class SourceDownloadDto ( 
     val sourceDownloadId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val sourceScheduleId : Long
     , val downloadTransformGroupId : Long
     , val executorHostId : Long
     , val executorContextId : Long
     , val sourceViewId : Long
     , val retryNumber : Int
     , val isRunning : Int
     , val isFinished : Int
     , val isExcecption : Int
     , val excecptionDescription : String 
     ) extends BaseDto {  
   def tableName : String = {    "sourceDownload";    }  
   def fields : String = {    "sourceDownloadId,guid,insertedRowDate,lastUpdatedDate,sourceScheduleId,downloadTransformGroupId,executorHostId,executorContextId,sourceViewId,retryNumber,isRunning,isFinished,isExcecption,excecptionDescription";    }  
   def pkFields : String = {    "sourceDownloadId";    }  
   def fkFields : String = {    "downloadTransformGroupId,executorContextId,executorHostId,sourceScheduleId,sourceViewId";    }  
   def nameField : String = {    "";    }  
 def getPk() : Long = {    sourceDownloadId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(sourceDownloadId,guid,insertedRowDate,lastUpdatedDate,sourceScheduleId,downloadTransformGroupId,executorHostId,executorContextId,sourceViewId,retryNumber,isRunning,isFinished,isExcecption,excecptionDescription)  }  
 def toStringArray() : Array[String] = {    Array(""+sourceDownloadId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+sourceScheduleId,""+downloadTransformGroupId,""+executorHostId,""+executorContextId,""+sourceViewId,""+retryNumber,""+isRunning,""+isFinished,""+isExcecption,""+excecptionDescription)   }  
 def toJson() : String = {   "{" + "\"sourceDownloadId\":\""+sourceDownloadId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"sourceScheduleId\":\""+sourceScheduleId+"\""+","+"\"downloadTransformGroupId\":\""+downloadTransformGroupId+"\""+","+"\"executorHostId\":\""+executorHostId+"\""+","+"\"executorContextId\":\""+executorContextId+"\""+","+"\"sourceViewId\":\""+sourceViewId+"\""+","+"\"retryNumber\":\""+retryNumber+"\""+","+"\"isRunning\":\""+isRunning+"\""+","+"\"isFinished\":\""+isFinished+"\""+","+"\"isExcecption\":\""+isExcecption+"\""+","+"\"excecptionDescription\":\""+excecptionDescription+"\"" + "}"   }  
 def toFullString() : String = {    "sourceDownloadId:'"+sourceDownloadId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"sourceScheduleId:'"+sourceScheduleId+"'"+","+"downloadTransformGroupId:'"+downloadTransformGroupId+"'"+","+"executorHostId:'"+executorHostId+"'"+","+"executorContextId:'"+executorContextId+"'"+","+"sourceViewId:'"+sourceViewId+"'"+","+"retryNumber:'"+retryNumber+"'"+","+"isRunning:'"+isRunning+"'"+","+"isFinished:'"+isFinished+"'"+","+"isExcecption:'"+isExcecption+"'"+","+"excecptionDescription:'"+excecptionDescription+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "sourceDownloadId" => sourceDownloadId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "sourceScheduleId" => sourceScheduleId  
     case "downloadTransformGroupId" => downloadTransformGroupId  
     case "executorHostId" => executorHostId  
     case "executorContextId" => executorContextId  
     case "sourceViewId" => sourceViewId  
     case "retryNumber" => retryNumber  
     case "isRunning" => isRunning  
     case "isFinished" => isFinished  
     case "isExcecption" => isExcecption  
     case "excecptionDescription" => excecptionDescription   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "sourceDownloadId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "sourceScheduleId" => "Long"  
     case "downloadTransformGroupId" => "Long"  
     case "executorHostId" => "Long"  
     case "executorContextId" => "Long"  
     case "sourceViewId" => "Long"  
     case "retryNumber" => "Int"  
     case "isRunning" => "Int"  
     case "isFinished" => "Int"  
     case "isExcecption" => "Int"  
     case "excecptionDescription" => "String"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into sourceDownload(guid,sourceScheduleId,downloadTransformGroupId,executorHostId,executorContextId,sourceViewId,retryNumber,isRunning,isFinished,isExcecption,excecptionDescription) values (?,?,?,?,?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, sourceScheduleId);
    stat.setObject(3, downloadTransformGroupId);
    stat.setObject(4, executorHostId);
    stat.setObject(5, executorContextId);
    stat.setObject(6, sourceViewId);
    stat.setObject(7, retryNumber);
    stat.setObject(8, isRunning);
    stat.setObject(9, isFinished);
    stat.setObject(10, isExcecption);
    stat.setObject(11, excecptionDescription);
    return stat; 
   } 
   def modify(sourceScheduleId : Long, downloadTransformGroupId : Long, executorHostId : Long, executorContextId : Long, sourceViewId : Long, retryNumber : Int, isRunning : Int, isFinished : Int, isExcecption : Int, excecptionDescription : String) : SourceDownloadDto = {
    val dtoModified = new SourceDownloadDto(this.sourceDownloadId,this.guid,this.insertedRowDate,new java.util.Date(),sourceScheduleId,downloadTransformGroupId,executorHostId,executorContextId,sourceViewId,retryNumber,isRunning,isFinished,isExcecption,excecptionDescription);
    dtoModified
  }
 } 
object SourceDownloadDto { 
  val TABLE_NAME = "sourceDownload"; 
   val FIELD_sourceDownloadId = "sourceDownloadId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_sourceScheduleId = "sourceScheduleId";
   val FIELD_downloadTransformGroupId = "downloadTransformGroupId";
   val FIELD_executorHostId = "executorHostId";
   val FIELD_executorContextId = "executorContextId";
   val FIELD_sourceViewId = "sourceViewId";
   val FIELD_retryNumber = "retryNumber";
   val FIELD_isRunning = "isRunning";
   val FIELD_isFinished = "isFinished";
   val FIELD_isExcecption = "isExcecption";
   val FIELD_excecptionDescription = "excecptionDescription";

  def createNewSourceDownloadDto(sourceScheduleId : Long, downloadTransformGroupId : Long, executorHostId : Long, executorContextId : Long, sourceViewId : Long, retryNumber : Int, isRunning : Int, isFinished : Int, isExcecption : Int, excecptionDescription : String) : SourceDownloadDto = {  
     val dto = new SourceDownloadDto(0,0,new java.util.Date(),new java.util.Date(),sourceScheduleId,downloadTransformGroupId,executorHostId,executorContextId,sourceViewId,retryNumber,isRunning,isFinished,isExcecption,excecptionDescription)   
    dto 
  } 

}

 
