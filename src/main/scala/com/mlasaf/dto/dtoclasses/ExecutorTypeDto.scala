/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class ExecutorTypeDto ( 
     val executorTypeId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val executorTypeName : String
     , val executorTypeClass : String 
     ) extends BaseDto {  
   def tableName : String = {    "executorType";    }  
   def fields : String = {    "executorTypeId,guid,insertedRowDate,lastUpdatedDate,executorTypeName,executorTypeClass";    }  
   def pkFields : String = {    "executorTypeId";    }  
   def fkFields : String = {    "";    }  
   def nameField : String = {    "executorTypeName";    }  
 def getPk() : Long = {    executorTypeId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(executorTypeId,guid,insertedRowDate,lastUpdatedDate,executorTypeName,executorTypeClass)  }  
 def toStringArray() : Array[String] = {    Array(""+executorTypeId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+executorTypeName,""+executorTypeClass)   }  
 def toJson() : String = {   "{" + "\"executorTypeId\":\""+executorTypeId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"executorTypeName\":\""+executorTypeName+"\""+","+"\"executorTypeClass\":\""+executorTypeClass+"\"" + "}"   }  
 def toFullString() : String = {    "executorTypeId:'"+executorTypeId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"executorTypeName:'"+executorTypeName+"'"+","+"executorTypeClass:'"+executorTypeClass+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "executorTypeId" => executorTypeId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "executorTypeName" => executorTypeName  
     case "executorTypeClass" => executorTypeClass   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "executorTypeId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "executorTypeName" => "String"  
     case "executorTypeClass" => "String"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into executorType(guid,executorTypeName,executorTypeClass) values (?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, executorTypeName);
    stat.setObject(3, executorTypeClass);
    return stat; 
   } 
   def modify(executorTypeName : String, executorTypeClass : String) : ExecutorTypeDto = {
    val dtoModified = new ExecutorTypeDto(this.executorTypeId,this.guid,this.insertedRowDate,new java.util.Date(),executorTypeName,executorTypeClass);
    dtoModified
  }
 } 
object ExecutorTypeDto { 
  val TABLE_NAME = "executorType"; 
   val FIELD_executorTypeId = "executorTypeId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_executorTypeName = "executorTypeName";
   val FIELD_executorTypeClass = "executorTypeClass";

  def createNewExecutorTypeDto(executorTypeName : String, executorTypeClass : String) : ExecutorTypeDto = {  
     val dto = new ExecutorTypeDto(0,0,new java.util.Date(),new java.util.Date(),executorTypeName,executorTypeClass)   
    dto 
  } 

}

 
