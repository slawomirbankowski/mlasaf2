/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class SourceDownloadStatColumnDto ( 
     val sourceDownloadStatColumnId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val sourceDownloadId : Long
     , val sourceViewColumnId : Long
     , val columnMinNumber : Double
     , val columnMaxNumber : Double
     , val columnMinStr : String
     , val columnMaxStr : String
     , val columnNonemptyCount : Long 
     ) extends BaseDto {  
   def tableName : String = {    "sourceDownloadStatColumn";    }  
   def fields : String = {    "sourceDownloadStatColumnId,guid,insertedRowDate,lastUpdatedDate,sourceDownloadId,sourceViewColumnId,columnMinNumber,columnMaxNumber,columnMinStr,columnMaxStr,columnNonemptyCount";    }  
   def pkFields : String = {    "sourceDownloadStatColumnId";    }  
   def fkFields : String = {    "sourceDownloadId,sourceViewColumnId";    }  
   def nameField : String = {    "";    }  
 def getPk() : Long = {    sourceDownloadStatColumnId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(sourceDownloadStatColumnId,guid,insertedRowDate,lastUpdatedDate,sourceDownloadId,sourceViewColumnId,columnMinNumber,columnMaxNumber,columnMinStr,columnMaxStr,columnNonemptyCount)  }  
 def toStringArray() : Array[String] = {    Array(""+sourceDownloadStatColumnId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+sourceDownloadId,""+sourceViewColumnId,""+columnMinNumber,""+columnMaxNumber,""+columnMinStr,""+columnMaxStr,""+columnNonemptyCount)   }  
 def toJson() : String = {   "{" + "\"sourceDownloadStatColumnId\":\""+sourceDownloadStatColumnId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"sourceDownloadId\":\""+sourceDownloadId+"\""+","+"\"sourceViewColumnId\":\""+sourceViewColumnId+"\""+","+"\"columnMinNumber\":\""+columnMinNumber+"\""+","+"\"columnMaxNumber\":\""+columnMaxNumber+"\""+","+"\"columnMinStr\":\""+columnMinStr+"\""+","+"\"columnMaxStr\":\""+columnMaxStr+"\""+","+"\"columnNonemptyCount\":\""+columnNonemptyCount+"\"" + "}"   }  
 def toFullString() : String = {    "sourceDownloadStatColumnId:'"+sourceDownloadStatColumnId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"sourceDownloadId:'"+sourceDownloadId+"'"+","+"sourceViewColumnId:'"+sourceViewColumnId+"'"+","+"columnMinNumber:'"+columnMinNumber+"'"+","+"columnMaxNumber:'"+columnMaxNumber+"'"+","+"columnMinStr:'"+columnMinStr+"'"+","+"columnMaxStr:'"+columnMaxStr+"'"+","+"columnNonemptyCount:'"+columnNonemptyCount+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "sourceDownloadStatColumnId" => sourceDownloadStatColumnId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "sourceDownloadId" => sourceDownloadId  
     case "sourceViewColumnId" => sourceViewColumnId  
     case "columnMinNumber" => columnMinNumber  
     case "columnMaxNumber" => columnMaxNumber  
     case "columnMinStr" => columnMinStr  
     case "columnMaxStr" => columnMaxStr  
     case "columnNonemptyCount" => columnNonemptyCount   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "sourceDownloadStatColumnId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "sourceDownloadId" => "Long"  
     case "sourceViewColumnId" => "Long"  
     case "columnMinNumber" => "Double"  
     case "columnMaxNumber" => "Double"  
     case "columnMinStr" => "String"  
     case "columnMaxStr" => "String"  
     case "columnNonemptyCount" => "Long"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into sourceDownloadStatColumn(guid,sourceDownloadId,sourceViewColumnId,columnMinNumber,columnMaxNumber,columnMinStr,columnMaxStr,columnNonemptyCount) values (?,?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, sourceDownloadId);
    stat.setObject(3, sourceViewColumnId);
    stat.setObject(4, columnMinNumber);
    stat.setObject(5, columnMaxNumber);
    stat.setObject(6, columnMinStr);
    stat.setObject(7, columnMaxStr);
    stat.setObject(8, columnNonemptyCount);
    return stat; 
   } 
   def modify(sourceDownloadId : Long, sourceViewColumnId : Long, columnMinNumber : Double, columnMaxNumber : Double, columnMinStr : String, columnMaxStr : String, columnNonemptyCount : Long) : SourceDownloadStatColumnDto = {
    val dtoModified = new SourceDownloadStatColumnDto(this.sourceDownloadStatColumnId,this.guid,this.insertedRowDate,new java.util.Date(),sourceDownloadId,sourceViewColumnId,columnMinNumber,columnMaxNumber,columnMinStr,columnMaxStr,columnNonemptyCount);
    dtoModified
  }
 } 
object SourceDownloadStatColumnDto { 
  val TABLE_NAME = "sourceDownloadStatColumn"; 
   val FIELD_sourceDownloadStatColumnId = "sourceDownloadStatColumnId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_sourceDownloadId = "sourceDownloadId";
   val FIELD_sourceViewColumnId = "sourceViewColumnId";
   val FIELD_columnMinNumber = "columnMinNumber";
   val FIELD_columnMaxNumber = "columnMaxNumber";
   val FIELD_columnMinStr = "columnMinStr";
   val FIELD_columnMaxStr = "columnMaxStr";
   val FIELD_columnNonemptyCount = "columnNonemptyCount";

  def createNewSourceDownloadStatColumnDto(sourceDownloadId : Long, sourceViewColumnId : Long, columnMinNumber : Double, columnMaxNumber : Double, columnMinStr : String, columnMaxStr : String, columnNonemptyCount : Long) : SourceDownloadStatColumnDto = {  
     val dto = new SourceDownloadStatColumnDto(0,0,new java.util.Date(),new java.util.Date(),sourceDownloadId,sourceViewColumnId,columnMinNumber,columnMaxNumber,columnMinStr,columnMaxStr,columnNonemptyCount)   
    dto 
  } 

}

 
