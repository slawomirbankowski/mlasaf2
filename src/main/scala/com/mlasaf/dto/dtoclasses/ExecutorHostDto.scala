/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class ExecutorHostDto ( 
     val executorHostId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val hostName : String
     , val hostIp : String
     , val hostDomain : String
     , val hostOsType : String
     , val hostOsVersion : String
     , val isWorking : Int 
     ) extends BaseDto {  
   def tableName : String = {    "executorHost";    }  
   def fields : String = {    "executorHostId,guid,insertedRowDate,lastUpdatedDate,hostName,hostIp,hostDomain,hostOsType,hostOsVersion,isWorking";    }  
   def pkFields : String = {    "executorHostId";    }  
   def fkFields : String = {    "";    }  
   def nameField : String = {    "";    }  
 def getPk() : Long = {    executorHostId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(executorHostId,guid,insertedRowDate,lastUpdatedDate,hostName,hostIp,hostDomain,hostOsType,hostOsVersion,isWorking)  }  
 def toStringArray() : Array[String] = {    Array(""+executorHostId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+hostName,""+hostIp,""+hostDomain,""+hostOsType,""+hostOsVersion,""+isWorking)   }  
 def toJson() : String = {   "{" + "\"executorHostId\":\""+executorHostId+"\""+","+"\"guid\":\""+guid+"\""+","+"\"insertedRowDate\":\""+insertedRowDate+"\""+","+"\"lastUpdatedDate\":\""+lastUpdatedDate+"\""+","+"\"hostName\":\""+hostName+"\""+","+"\"hostIp\":\""+hostIp+"\""+","+"\"hostDomain\":\""+hostDomain+"\""+","+"\"hostOsType\":\""+hostOsType+"\""+","+"\"hostOsVersion\":\""+hostOsVersion+"\""+","+"\"isWorking\":\""+isWorking+"\"" + "}"   }  
 def toFullString() : String = {    "executorHostId:'"+executorHostId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"hostName:'"+hostName+"'"+","+"hostIp:'"+hostIp+"'"+","+"hostDomain:'"+hostDomain+"'"+","+"hostOsType:'"+hostOsType+"'"+","+"hostOsVersion:'"+hostOsVersion+"'"+","+"isWorking:'"+isWorking+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "executorHostId" => executorHostId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "hostName" => hostName  
     case "hostIp" => hostIp  
     case "hostDomain" => hostDomain  
     case "hostOsType" => hostOsType  
     case "hostOsVersion" => hostOsVersion  
     case "isWorking" => isWorking   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "executorHostId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "hostName" => "String"  
     case "hostIp" => "String"  
     case "hostDomain" => "String"  
     case "hostOsType" => "String"  
     case "hostOsVersion" => "String"  
     case "isWorking" => "Int"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into executorHost(guid,hostName,hostIp,hostDomain,hostOsType,hostOsVersion,isWorking) values (?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, hostName);
    stat.setObject(3, hostIp);
    stat.setObject(4, hostDomain);
    stat.setObject(5, hostOsType);
    stat.setObject(6, hostOsVersion);
    stat.setObject(7, isWorking);
    return stat; 
   } 
   def modify(hostName : String, hostIp : String, hostDomain : String, hostOsType : String, hostOsVersion : String, isWorking : Int) : ExecutorHostDto = {
    val dtoModified = new ExecutorHostDto(this.executorHostId,this.guid,this.insertedRowDate,new java.util.Date(),hostName,hostIp,hostDomain,hostOsType,hostOsVersion,isWorking);
    dtoModified
  }
 } 
object ExecutorHostDto { 
  val TABLE_NAME = "executorHost"; 
   val FIELD_executorHostId = "executorHostId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_hostName = "hostName";
   val FIELD_hostIp = "hostIp";
   val FIELD_hostDomain = "hostDomain";
   val FIELD_hostOsType = "hostOsType";
   val FIELD_hostOsVersion = "hostOsVersion";
   val FIELD_isWorking = "isWorking";

  def createNewExecutorHostDto(hostName : String, hostIp : String, hostDomain : String, hostOsType : String, hostOsVersion : String, isWorking : Int) : ExecutorHostDto = {  
     val dto = new ExecutorHostDto(0,0,new java.util.Date(),new java.util.Date(),hostName,hostIp,hostDomain,hostOsType,hostOsVersion,isWorking)   
    dto 
  } 

}

 
