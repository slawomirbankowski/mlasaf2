/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dao

import anorm.{SQL, SqlParser}
import com.mlasaf.dto._
import java.util.Date


 class VSourceViewFormatSummaryDao extends DaoBase { 

  def getVSourceViewFormatSummarysList() : List[VSourceViewFormatSummaryDto] = {
   implicit val connection = getConnection();
   val dtos : List[VSourceViewFormatSummaryDto]= SQL("select * from vSourceViewFormatSummary").as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);
   releaseConnection(connection);
   dtos
  }
  def getVSourceViewFormatSummarysCount() : Long = {
   implicit val connection = getConnection();
   val cnt : Long = SQL("select count(*) as cnt from vSourceViewFormatSummary").executeQuery()(connection).as[Long](SqlParser.long("cnt").single)(connection);
   releaseConnection(connection);
   cnt
  }
  def getVSourceViewFormatSummarysLastInsertDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(insertedRowDate) as lastDate from vSourceViewFormatSummary").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastDate").single)(connection);
   releaseConnection(connection);
   ld
  }
  def getVSourceViewFormatSummarysLastUpdatedDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(lastUpdatedDate) as lastUpdatedDate from vSourceViewFormatSummary").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastUpdatedDate").single)(connection);
   releaseConnection(connection);
   ld
  }
  def getVSourceViewFormatSummaryFirst() : VSourceViewFormatSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VSourceViewFormatSummaryDto= SQL("select * from vSourceViewFormatSummary order by insertedRowDate asc ").as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*).head;
   releaseConnection(connection);
   dtos
  }
  def getVSourceViewFormatSummaryLast() : VSourceViewFormatSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VSourceViewFormatSummaryDto= SQL("select * from vSourceViewFormatSummary order by insertedRowDate desc ").as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*).head;
   releaseConnection(connection);
   dtos
  }
  def getVSourceViewFormatSummarysByField(fieldName : String, fieldValue : String) : List[VSourceViewFormatSummaryDto] = {
   implicit val connection = getConnection();
   val dtos : List[VSourceViewFormatSummaryDto]= SQL("select * from vSourceViewFormatSummary where " + fieldName + " = {fieldValue} ").on("fieldValue" -> fieldValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);
   releaseConnection(connection);
   dtos
  }
  def getVSourceViewFormatSummaryByGuid(guid : Long) : VSourceViewFormatSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VSourceViewFormatSummaryDto= SQL("select * from vSourceViewFormatSummary where guid = {guid} ").on("guid" -> guid).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].single);
   releaseConnection(connection);
   dtos
  }  
 def getDtosBySourceViewFormatId(colValue : Long) : List[VSourceViewFormatSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VSourceViewFormatSummaryDto] = SQL("select * from vSourceViewFormatSummary where sourceViewFormatId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByGuid(colValue : Long) : List[VSourceViewFormatSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VSourceViewFormatSummaryDto] = SQL("select * from vSourceViewFormatSummary where guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByInsertedRowDate(colValue : java.util.Date) : List[VSourceViewFormatSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VSourceViewFormatSummaryDto] = SQL("select * from vSourceViewFormatSummary where insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByLastUpdatedDate(colValue : java.util.Date) : List[VSourceViewFormatSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VSourceViewFormatSummaryDto] = SQL("select * from vSourceViewFormatSummary where lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosBySourceViewFormatName(colValue : String) : List[VSourceViewFormatSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VSourceViewFormatSummaryDto] = SQL("select * from vSourceViewFormatSummary where sourceViewFormatName = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosBySourceViewFormatClass(colValue : String) : List[VSourceViewFormatSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VSourceViewFormatSummaryDto] = SQL("select * from vSourceViewFormatSummary where sourceViewFormatClass = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosBySourceView_count(colValue : Int) : List[VSourceViewFormatSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VSourceViewFormatSummaryDto] = SQL("select * from vSourceViewFormatSummary where sourceView_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VSourceViewFormatSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  

} 
