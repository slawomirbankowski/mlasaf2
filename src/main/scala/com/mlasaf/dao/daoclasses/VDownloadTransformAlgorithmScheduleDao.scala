/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dao

import anorm.{SQL, SqlParser}
import com.mlasaf.dto._
import java.util.Date


 class VDownloadTransformAlgorithmScheduleDao extends DaoBase { 

  def getVDownloadTransformAlgorithmSchedulesList() : List[VDownloadTransformAlgorithmScheduleDto] = {
   implicit val connection = getConnection();
   val dtos : List[VDownloadTransformAlgorithmScheduleDto]= SQL("select * from vDownloadTransformAlgorithmSchedule").as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformAlgorithmSchedulesCount() : Long = {
   implicit val connection = getConnection();
   val cnt : Long = SQL("select count(*) as cnt from vDownloadTransformAlgorithmSchedule").executeQuery()(connection).as[Long](SqlParser.long("cnt").single)(connection);
   releaseConnection(connection);
   cnt
  }
  def getVDownloadTransformAlgorithmSchedulesLastInsertDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(insertedRowDate) as lastDate from vDownloadTransformAlgorithmSchedule").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastDate").single)(connection);
   releaseConnection(connection);
   ld
  }
  def getVDownloadTransformAlgorithmSchedulesLastUpdatedDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(lastUpdatedDate) as lastUpdatedDate from vDownloadTransformAlgorithmSchedule").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastUpdatedDate").single)(connection);
   releaseConnection(connection);
   ld
  }
  def getVDownloadTransformAlgorithmScheduleFirst() : VDownloadTransformAlgorithmScheduleDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformAlgorithmScheduleDto= SQL("select * from vDownloadTransformAlgorithmSchedule order by insertedRowDate asc ").as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*).head;
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformAlgorithmScheduleLast() : VDownloadTransformAlgorithmScheduleDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformAlgorithmScheduleDto= SQL("select * from vDownloadTransformAlgorithmSchedule order by insertedRowDate desc ").as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*).head;
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformAlgorithmSchedulesByField(fieldName : String, fieldValue : String) : List[VDownloadTransformAlgorithmScheduleDto] = {
   implicit val connection = getConnection();
   val dtos : List[VDownloadTransformAlgorithmScheduleDto]= SQL("select * from vDownloadTransformAlgorithmSchedule where " + fieldName + " = {fieldValue} ").on("fieldValue" -> fieldValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformAlgorithmScheduleByGuid(guid : Long) : VDownloadTransformAlgorithmScheduleDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformAlgorithmScheduleDto= SQL("select * from vDownloadTransformAlgorithmSchedule where guid = {guid} ").on("guid" -> guid).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].single);
   releaseConnection(connection);
   dtos
  }  
 def getDtosByDownloadTransformAlgorithmScheduleId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformAlgorithmScheduleId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByGuid(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByInsertedRowDate(colValue : java.util.Date) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByLastUpdatedDate(colValue : java.util.Date) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroupId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformGroupId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleViewId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleViewId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_algorithmScheduleViewId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_algorithmScheduleViewId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_guid(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_insertedRowDate(colValue : java.util.Date) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_lastUpdatedDate(colValue : java.util.Date) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_algorithmScheduleViewTypeId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_algorithmScheduleViewTypeId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_algorithmScheduleId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_algorithmScheduleId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_sourceViewId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_sourceViewId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByAlgorithmScheduleView_joinOnDefinition(colValue : String) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where algorithmScheduleView_joinOnDefinition = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroup_downloadTransformGroupId(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformGroup_downloadTransformGroupId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroup_guid(colValue : Long) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformGroup_guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroup_insertedRowDate(colValue : java.util.Date) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformGroup_insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroup_lastUpdatedDate(colValue : java.util.Date) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformGroup_lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroup_downloadTransformGroupName(colValue : String) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformGroup_downloadTransformGroupName = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroup_downloadTransformGroupDescription(colValue : String) : List[VDownloadTransformAlgorithmScheduleDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformAlgorithmScheduleDto] = SQL("select * from vDownloadTransformAlgorithmSchedule where downloadTransformGroup_downloadTransformGroupDescription = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformAlgorithmScheduleDto].*);  
   releaseConnection(connection);  
   dtos  
 }  

} 
