/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dao

import anorm.{SQL, SqlParser}
import com.mlasaf.dto._
import java.util.Date


 class VDownloadTransformGroupSummaryDao extends DaoBase { 

  def getVDownloadTransformGroupSummarysList() : List[VDownloadTransformGroupSummaryDto] = {
   implicit val connection = getConnection();
   val dtos : List[VDownloadTransformGroupSummaryDto]= SQL("select * from vDownloadTransformGroupSummary").as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformGroupSummarysCount() : Long = {
   implicit val connection = getConnection();
   val cnt : Long = SQL("select count(*) as cnt from vDownloadTransformGroupSummary").executeQuery()(connection).as[Long](SqlParser.long("cnt").single)(connection);
   releaseConnection(connection);
   cnt
  }
  def getVDownloadTransformGroupSummarysLastInsertDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(insertedRowDate) as lastDate from vDownloadTransformGroupSummary").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastDate").single)(connection);
   releaseConnection(connection);
   ld
  }
  def getVDownloadTransformGroupSummarysLastUpdatedDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(lastUpdatedDate) as lastUpdatedDate from vDownloadTransformGroupSummary").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastUpdatedDate").single)(connection);
   releaseConnection(connection);
   ld
  }
  def getVDownloadTransformGroupSummaryFirst() : VDownloadTransformGroupSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformGroupSummaryDto= SQL("select * from vDownloadTransformGroupSummary order by insertedRowDate asc ").as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*).head;
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformGroupSummaryLast() : VDownloadTransformGroupSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformGroupSummaryDto= SQL("select * from vDownloadTransformGroupSummary order by insertedRowDate desc ").as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*).head;
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformGroupSummarysByField(fieldName : String, fieldValue : String) : List[VDownloadTransformGroupSummaryDto] = {
   implicit val connection = getConnection();
   val dtos : List[VDownloadTransformGroupSummaryDto]= SQL("select * from vDownloadTransformGroupSummary where " + fieldName + " = {fieldValue} ").on("fieldValue" -> fieldValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);
   releaseConnection(connection);
   dtos
  }
  def getVDownloadTransformGroupSummaryByGuid(guid : Long) : VDownloadTransformGroupSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformGroupSummaryDto= SQL("select * from vDownloadTransformGroupSummary where guid = {guid} ").on("guid" -> guid).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].single);
   releaseConnection(connection);
   dtos
  }  
 def getDtosByDownloadTransformGroupId(colValue : Long) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where downloadTransformGroupId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByGuid(colValue : Long) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByInsertedRowDate(colValue : java.util.Date) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByLastUpdatedDate(colValue : java.util.Date) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroupName(colValue : String) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where downloadTransformGroupName = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformGroupDescription(colValue : String) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where downloadTransformGroupDescription = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosBySourceDownload_count(colValue : Int) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where sourceDownload_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByExecutorStorageView_count(colValue : Int) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where executorStorageView_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformAlgorithmSchedule_count(colValue : Int) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where downloadTransformAlgorithmSchedule_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransformExecutorStorage_count(colValue : Int) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where downloadTransformExecutorStorage_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosByDownloadTransform_count(colValue : Int) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where downloadTransform_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  
 def getDtosBySourceSchedule_count(colValue : Int) : List[VDownloadTransformGroupSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformGroupSummaryDto] = SQL("select * from vDownloadTransformGroupSummary where sourceSchedule_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformGroupSummaryDto].*);  
   releaseConnection(connection);  
   dtos  
 }  

} 
